Question - You are given an integer array nums. You can choose exactly one index (0-indexed) and remove the element. Notice that the index of the elements may change after the removal.

For example, if nums = [6,1,7,4,1]:

Choosing to remove index 1 results in nums = [6,7,4,1].
Choosing to remove index 2 results in nums = [6,1,4,1].
Choosing to remove index 4 results in nums = [6,1,7,4].
An array is fair if the sum of the odd-indexed values equals the sum of the even-indexed values.

Return the number of indices that you could choose such that after the removal, nums is fair.

 

Example 1:

Input: nums = [2,1,6,4]
Output: 1
Explanation:
Remove index 0: [1,6,4] -> Even sum: 1 + 4 = 5. Odd sum: 6. Not fair.
Remove index 1: [2,6,4] -> Even sum: 2 + 4 = 6. Odd sum: 6. Fair.
Remove

index 2: [2,1,4] -> Even sum: 2 + 4 = 6. Odd sum: 1. Not fair.
Remove index 3: [2,1,6] -> Even sum: 2 + 6 = 8. Odd sum: 1. Not fair.
There is 1 index that you can remove to make nums fair.
Example 2:

Input: nums = [1,1,1]
Output: 3
Explanation: You can remove any index and the remaining array is fair.
Example 3:

Input: nums = [1,2,3]
Output: 0
Explanation: You cannot make a fair array after removing any index.

https://leetcode.com/problems/ways-to-make-a-fair-array/description/

Solution - 1. first calculate and store the sum of all odd indices and even indices elements.
           2. iterate the array and remove the current element and check now whether sum of odd indices == even indices and onemore thing after deleting one element all the even indices element in the right of
              deleted element will become odd indices and odd indices element will become even.
           3. While iterating the array also maintain the sum of odd and even indices element till current element.

class Solution {
    public int waysToMakeFair(int[] nums) {
        int res = 0, left[] = new int[2], right[] = new int[2], len = nums.length;

        // Sum of even no in right[0] and odd in right[1]
        for(int i = 0; i < len; i++){
            right[i%2] = right[i%2] + nums[i];
        }

        for(int i = 0; i < len; i++){
            right[i%2] = right[i%2] - nums[i];

            // take any no. as a partition then sum of all even no's to it's left
            // will stored in left[0] and odd in left[1] and to it's right will be
            // stored in right[0] and right[1]
            // even == odd
            if((left[0] + right[1]) == (left[1] + right[0])){
                res++;
            }

            left[i%2] = left[i%2] + nums[i];
        }

        return res;
    }
}
